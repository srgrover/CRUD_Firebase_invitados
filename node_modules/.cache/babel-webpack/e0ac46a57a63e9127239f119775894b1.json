{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, NgZone, Injector } from '@angular/core';\nimport { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵzoneWrap } from '@angular/fire';\nimport { timer, from } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { AppCheckInstances } from '@angular/fire/app-check';\nimport { httpsCallable as httpsCallable$1 } from 'rxfire/functions';\nimport { connectFunctionsEmulator as connectFunctionsEmulator$1, getFunctions as getFunctions$1, httpsCallable as httpsCallable$2 } from 'firebase/functions';\nexport * from 'firebase/functions';\n\nclass Functions {\n  constructor(functions) {\n    return functions;\n  }\n\n}\n\nconst FUNCTIONS_PROVIDER_NAME = 'functions';\n\nclass FunctionsInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(FUNCTIONS_PROVIDER_NAME);\n  }\n\n}\n\nconst functionInstance$ = /*#__PURE__*/ /*#__PURE__*/timer(0, 300).pipe( /*#__PURE__*/concatMap(() => from(ɵgetAllInstancesOf(FUNCTIONS_PROVIDER_NAME))), /*#__PURE__*/distinct());\nconst PROVIDED_FUNCTIONS_INSTANCES = /*#__PURE__*/new InjectionToken('angularfire2.functions-instances');\n\nfunction defaultFunctionsInstanceFactory(provided, defaultApp) {\n  const defaultAuth = ɵgetDefaultInstanceOf(FUNCTIONS_PROVIDER_NAME, provided, defaultApp);\n  return defaultAuth && new Functions(defaultAuth);\n}\n\nfunction functionsInstanceFactory(fn) {\n  return (zone, injector) => {\n    const functions = zone.runOutsideAngular(() => fn(injector));\n    return new Functions(functions);\n  };\n}\n\nconst FUNCTIONS_INSTANCES_PROVIDER = {\n  provide: FunctionsInstances,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_FUNCTIONS_INSTANCES]]\n};\nconst DEFAULT_FUNCTIONS_INSTANCE_PROVIDER = {\n  provide: Functions,\n  useFactory: defaultFunctionsInstanceFactory,\n  deps: [[/*#__PURE__*/new Optional(), PROVIDED_FUNCTIONS_INSTANCES], FirebaseApp]\n};\nlet FunctionsModule = /*#__PURE__*/(() => {\n  class FunctionsModule {\n    constructor() {\n      registerVersion('angularfire', VERSION.full, 'fn');\n    }\n\n  }\n\n  FunctionsModule.ɵfac = function FunctionsModule_Factory(t) {\n    return new (t || FunctionsModule)();\n  };\n\n  FunctionsModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FunctionsModule\n  });\n  FunctionsModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_FUNCTIONS_INSTANCE_PROVIDER, FUNCTIONS_INSTANCES_PROVIDER]\n  });\n  return FunctionsModule;\n})();\n\n/*#__PURE__*/\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\nfunction provideFunctions(fn, ...deps) {\n  return {\n    ngModule: FunctionsModule,\n    providers: [{\n      provide: PROVIDED_FUNCTIONS_INSTANCES,\n      useFactory: functionsInstanceFactory(fn),\n      multi: true,\n      deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps, // Defensively load Auth first, if provided\n      [new Optional(), AuthInstances], [new Optional(), AppCheckInstances], ...deps]\n    }]\n  };\n} // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\n\nconst httpsCallableData = /*#__PURE__*/ɵzoneWrap(httpsCallable$1, true); // DO NOT MODIFY, this file is autogenerated by tools/build.ts\n\nconst connectFunctionsEmulator = /*#__PURE__*/ɵzoneWrap(connectFunctionsEmulator$1, true);\nconst getFunctions = /*#__PURE__*/ɵzoneWrap(getFunctions$1, true);\nconst httpsCallable = /*#__PURE__*/ɵzoneWrap(httpsCallable$2, true);\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Functions, FunctionsInstances, FunctionsModule, connectFunctionsEmulator, functionInstance$, getFunctions, httpsCallable, httpsCallableData, provideFunctions }; //# sourceMappingURL=angular-fire-functions.js.map","map":null,"metadata":{},"sourceType":"module"}