{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/romerosp/source/repos/Angular/CRUD_Firebase_invitados/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nimport * as i2 from \"@angular/router\";\nexport class DataService {\n  constructor(afs, router) {\n    this.afs = afs;\n    this.router = router;\n    this.ruta = this.router.url;\n    this.invitadoCollection = afs.collection('personas');\n    this.grupoCollection = afs.collection('grupos');\n    this.getGrupos();\n    this.getInvitados();\n    console.log(this.router.url); //  /tu-ruta\n  }\n\n  addInvitado(invitado) {\n    var _this = this;\n\n    console.log(\"ðŸš€ ~ file: data.service.ts ~ line 28 ~ DataService ~ invitado\", invitado);\n    return new Promise( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          invitado.id = invitado.id || _this.afs.createId();\n          const result = yield _this.invitadoCollection.doc(invitado.id).set(invitado);\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      });\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  }\n\n  getInvitados() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      _this2.invitados = yield _this2.invitadoCollection.snapshotChanges().pipe(map(actions => actions.map(a => a.payload.doc.data())));\n    })();\n  }\n\n  deleteInvitado(id) {\n    var _this3 = this;\n\n    return new Promise( /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          const result = yield _this3.invitadoCollection.doc(id).delete();\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      });\n\n      return function (_x3, _x4) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n  }\n\n  addGrupo(grupo) {\n    var _this4 = this;\n\n    console.log(grupo);\n    return new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          grupo.id = grupo.id || _this4.afs.createId();\n          const result = yield _this4.grupoCollection.doc(grupo.id).set(grupo);\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      });\n\n      return function (_x5, _x6) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  }\n\n  getGrupos() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.grupos = yield _this5.grupoCollection.snapshotChanges().pipe(map(actions => actions.map(a => a.payload.doc.data())));\n    })();\n  }\n\n  deleteGrupo(id) {\n    var _this6 = this;\n\n    return new Promise( /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (resolve, reject) {\n        try {\n          const result = yield _this6.grupoCollection.doc(id).delete();\n          resolve(result);\n        } catch (err) {\n          reject(err);\n        }\n      });\n\n      return function (_x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }());\n  }\n\n}\n\nDataService.Éµfac = function DataService_Factory(t) {\n  return new (t || DataService)(i0.ÉµÉµinject(i1.AngularFirestore), i0.ÉµÉµinject(i2.Router));\n};\n\nDataService.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n  token: DataService,\n  factory: DataService.Éµfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:/Users/romerosp/source/repos/Angular/CRUD_Firebase_invitados/src/app/shared/services/data.service.ts"],"names":["map","i0","i1","i2","DataService","constructor","afs","router","ruta","url","invitadoCollection","collection","grupoCollection","getGrupos","getInvitados","console","log","addInvitado","invitado","Promise","resolve","reject","id","createId","result","doc","set","err","invitados","snapshotChanges","pipe","actions","a","payload","data","deleteInvitado","delete","addGrupo","grupo","grupos","deleteGrupo","Éµfac","DataService_Factory","t","ÉµÉµinject","AngularFirestore","Router","Éµprov","ÉµÉµdefineInjectable","token","factory","providedIn"],"mappings":"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","sourcesContent":["import { map } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/fire/compat/firestore\";\r\nimport * as i2 from \"@angular/router\";\r\nexport class DataService {\r\n    constructor(afs, router) {\r\n        this.afs = afs;\r\n        this.router = router;\r\n        this.ruta = this.router.url;\r\n        this.invitadoCollection = afs.collection('personas');\r\n        this.grupoCollection = afs.collection('grupos');\r\n        this.getGrupos();\r\n        this.getInvitados();\r\n        console.log(this.router.url); //  /tu-ruta\r\n    }\r\n    addInvitado(invitado) {\r\n        console.log(\"ðŸš€ ~ file: data.service.ts ~ line 28 ~ DataService ~ invitado\", invitado);\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                invitado.id = invitado.id || this.afs.createId();\r\n                const result = await this.invitadoCollection.doc(invitado.id).set(invitado);\r\n                resolve(result);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async getInvitados() {\r\n        this.invitados = await this.invitadoCollection\r\n            .snapshotChanges()\r\n            .pipe(map((actions) => actions.map((a) => a.payload.doc.data())));\r\n    }\r\n    deleteInvitado(id) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await this.invitadoCollection.doc(id).delete();\r\n                resolve(result);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    addGrupo(grupo) {\r\n        console.log(grupo);\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                grupo.id = grupo.id || this.afs.createId();\r\n                const result = await this.grupoCollection.doc(grupo.id).set(grupo);\r\n                resolve(result);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n    async getGrupos() {\r\n        this.grupos = await this.grupoCollection\r\n            .snapshotChanges()\r\n            .pipe(map((actions) => actions.map((a) => a.payload.doc.data())));\r\n    }\r\n    deleteGrupo(id) {\r\n        return new Promise(async (resolve, reject) => {\r\n            try {\r\n                const result = await this.grupoCollection.doc(id).delete();\r\n                resolve(result);\r\n            }\r\n            catch (err) {\r\n                reject(err);\r\n            }\r\n        });\r\n    }\r\n}\r\nDataService.Éµfac = function DataService_Factory(t) { return new (t || DataService)(i0.ÉµÉµinject(i1.AngularFirestore), i0.ÉµÉµinject(i2.Router)); };\r\nDataService.Éµprov = /*@__PURE__*/ i0.ÉµÉµdefineInjectable({ token: DataService, factory: DataService.Éµfac, providedIn: 'root' });\r\n"]},"metadata":{},"sourceType":"module"}